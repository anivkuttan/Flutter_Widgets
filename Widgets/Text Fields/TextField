import 'package:flutter/material.dart';

void main() => runApp(MyApp());

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      home: MyWidget(),
    );
  }
}

class MyWidget extends StatefulWidget {
  @override
  _MyWidgetState createState() => _MyWidgetState();
}

class _MyWidgetState extends State<MyWidget> {
  FocusNode firstTextFieldFocus;
  String _text = 'Unknown';
  bool isHidden = true;
  @override
  void initState() {
    super.initState();
    firstTextFieldFocus = FocusNode();
  }

  @override
  void dispose() {
    firstTextFieldFocus.dispose();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Text Field'),
        leading: IconButton(
          onPressed: () {
            //to requesting focus
            FocusScope.of(context).requestFocus(firstTextFieldFocus);
          },
          icon: Icon(Icons.arrow_back_ios_new),
        ),
      ),
      body: SingleChildScrollView(
        padding: EdgeInsets.symmetric(horizontal: 20.0, vertical: 15.0),
        child: Column(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            Text(
              "Click the back btton to focus the first TextFiled ",
            ),
            Text(
              _text,
              style: TextStyle(fontSize: 28, color: Colors.blue),
            ),
            TextField(
              focusNode: firstTextFieldFocus,
              decoration: InputDecoration(
                floatingLabelBehavior:
                    FloatingLabelBehavior.always, //never-label text hide
                labelText: 'Labeltext always hear no moving',
                helperText: "Enter some thing",
                //icon parameter shows icons on outside of th field(front)
                icon: Icon(Icons.print),
              ), //decoration
              textAlign: TextAlign.center,
              style: TextStyle(
                color: Colors.green,
                fontSize: 20,
              ), //textstyle
              cursorColor: Colors.red,
              cursorWidth: 7,
              maxLength: 8, //maxLines:3,
              keyboardType: TextInputType.emailAddress,

              onChanged: (text) {
                setState(() {
                  _text = text;
                });
              },
            ),
            SizedBox(height: 30),
            TextField(
              decoration: InputDecoration(
                counter: ElevatedButton(
                    onPressed: () {}, child: Text('Counter widget')),
                border: OutlineInputBorder(),
                labelText: "Full Name",
                hintText: "Enter your full Name",
              ), //Inputdecoration
            ),
            SizedBox(height: 30),
            TextField(
              autofocus: true, //automatically cursor open in this text field
              decoration: InputDecoration(
                // prefixicon shows inside of the field
                prefixIcon: Icon(Icons.save),
                labelText: "This is Label text",
                hintText:
                    "This is hint text & Auto focus on So cursser on first tis field ",
                hintStyle: TextStyle(
                  color: Colors.purple,
                ), //textstyle
              ), //input
            ),
            SizedBox(height: 30),
            TextField(
              enabled: false, //true make it normal
              decoration: InputDecoration(
                labelText: "This is Disable TextField",
                //disabledBorder,enabledBorder,focusedBorder
                disabledBorder: OutlineInputBorder(
                  borderSide: BorderSide(
                    width: 3,
                    color: Colors.orange,
                  ), //birderside
                  borderRadius: BorderRadius.circular(30),
                ), //inputborder
              ), //decoration
            ),
            SizedBox(height: 30),
            TextField(
              enabled: true,
              decoration: InputDecoration(
                //labelText: "Round text",
                hintText: "Enter hear",
                border: OutlineInputBorder(
                  borderRadius: BorderRadius.circular(20),
                  borderSide: BorderSide(
                    width: 4,
                    color: Colors.green,
                  ), //borderside
                ), //border
              ),
            ),
            SizedBox(height: 30),
            TextField(
              obscureText: isHidden,
              decoration: InputDecoration(
                  labelText: 'obscure text : true',
                  border: OutlineInputBorder(),
                  suffixIcon: IconButton(
                      icon: Icon(
                          isHidden ? Icons.visibility_off : Icons.visibility),
                      onPressed: () {
                        setState(() {
                          isHidden = !isHidden;
                        });
                      })),
            ),
            SizedBox(height: 30),
            TextField(
              obscuringCharacter: '&',
              obscureText: true,
              decoration: InputDecoration(
                  filled: true,
                  counterText: 'Counter Text allways hear',
                  fillColor: Colors.yellow,
                  prefixText: 'Hello ',
                  hintText: 'obscuringCharacter: &'),
            ),
          ],
        ),
      ),
    );
  }
}

// InputDecoration({Widget icon,
// String labelText,
// TextStyle labelStyle,
// String helperText,
// TextStyle helperStyle,
// int helperMaxLines,
// String hintText,
// TextStyle hintStyle,
// TextDirection hintTextDirection,
// int hintMaxLines,
// String errorText,
// TextStyle errorStyle,
// int errorMaxLines,
// bool hasFloatingPlaceholder = true,
// FloatingLabelBehavior floatingLabelBehavior,
// bool isCollapsed = false,
// bool isDense,
// EdgeInsetsGeometry contentPadding,
// Widget prefixIcon,
// BoxConstraints prefixIconConstraints,
// Widget prefix,
// String prefixText,
// TextStyle prefixStyle,
// Widget suffixIcon,
// Widget suffix, String suffixText,
// TextStyle suffixStyle,
// BoxConstraints suffixIconConstraints,
// Widget counter, String counterText,
// TextStyle counterStyle, bool filled,
// Color fillColor, Color focusColor,
// Color hoverColor,
// InputBorder errorBorder,
// InputBorder focusedBorder,
// InputBorder focusedErrorBorder,
// InputBorder disabledBorder,
// InputBorder enabledBorder,
// InputBorder border,
// bool enabled = true,
