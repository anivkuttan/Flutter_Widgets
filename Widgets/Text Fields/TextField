import 'package:flutter/material.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      debugShowCheckedModeBanner: false,
      home: Scaffold(
        body: Center(
          child: MyWidget(),
        ),
      ),
    );
  }
}

class MyWidget extends StatefulWidget {
  @override
  _MyWidgetState createState() => _MyWidgetState();
}

class _MyWidgetState extends State<MyWidget> {
  TextEditingController nameController = TextEditingController();

  String fullName = '';

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text("TextField"),
      ), //appbar
      body: Padding(
        padding: EdgeInsets.all(38.0),
        child: ListView(
          children: <Widget>[
            Text(fullName), //text
            TextField(
              decoration: InputDecoration(
                helperText: "Enter some thing",
                icon: Icon(Icons.print),
              ), //decoration
              textAlign: TextAlign.center,
              style: TextStyle(
                color: Colors.green,
                fontSize: 20,
              ), //textstyle
              cursorColor: Colors.red,
              cursorWidth: 7,
              maxLength: 8, //maxLines:3,
              keyboardType: TextInputType.emailAddress,
              controller: nameController,
              onChanged: (text) {
                setState(() {
                  fullName = text;
                });
              },
            ), //textfield
            SizedBox(height: 20),
            TextField(
              decoration: InputDecoration(
                border: OutlineInputBorder(),
                labelText: "Full Name",
                hintText: "Enter your full Name",
              ), //decoration
            ), //textfield
            TextField(
              // autofocus: true, //automatically cursor open in this text field
              decoration: InputDecoration(
                prefixIcon: Icon(Icons.save),
                labelText: "This is Label text",
                hintText: "This is hint text",
                hintStyle: TextStyle(
                  color: Colors.purple,
                ), //textstyle
              ), //input
            ), //tf
            SizedBox(height: 25),
            TextField(
              enabled: false, //true make it normal
              decoration: InputDecoration(
                labelText: "This is Disable TextField",
                //disabledBorder,enabledBorder,focusedBorder
                disabledBorder: OutlineInputBorder(
                  borderSide: BorderSide(
                    width: 3,
                    color: Colors.orange,
                  ), //birderside
                  borderRadius: BorderRadius.circular(30),
                ), //inputborder
              ), //decoration
            ), //tf
            SizedBox(height: 25),
            TextField(
              enabled: true,

              decoration: InputDecoration(
                //labelText: "Round text",
                hintText: "Enter hear",
                border: OutlineInputBorder(
                  borderRadius: BorderRadius.circular(20),
                  borderSide: BorderSide(
                    width: 4,
                    color: Colors.green,
                  ), //borderside
                ), //border
              ), //decoration
            ), //tf
            SizedBox(height: 25),
            TextField(
              decoration: InputDecoration(
                suffixIcon: Icon(Icons.people),
                labelText: "Error",
                hintText: "hint Error",
                focusedBorder: OutlineInputBorder(
                  borderSide: BorderSide(
                    color: Colors.red,
                  ), //borderside
                ), //border
                errorText: "oops some thing Wrong!",
              ), //decoration
            ), //tf
            SizedBox(height: 25),
            TextField(
              decoration: InputDecoration(
                filled: true,
                fillColor: Colors.blue,
                labelText: "FullName",
                labelStyle: TextStyle(
                  color: Colors.white,
                ),
                border: OutlineInputBorder(
                  borderRadius: BorderRadius.circular(20),
                ), //border
              ), //decoration
            ), //tf
            SizedBox(height: 25),
            TextField(
              decoration: InputDecoration.collapsed(hintText: "hello"),
            ), //tf
            SizedBox(height: 25),
MyWidget(), 
SizedBox(height:25), 
            Container(
              padding: EdgeInsets.all(14),
              decoration: BoxDecoration(
                  color: Colors.blue[200],
                  borderRadius: BorderRadius.circular(32) //borderradius
                  ), //decoration
              child: TextField(
                decoration:
                    InputDecoration(hintText: "Search",suffixIcon:Icon(Icons.search),//icon
                                    border:InputBorder.none,
), //decoration input
              ), //textfield
            ), //container
          ], //widgets
        ), //listview
      ), //padding
    );
  }
}




class MyWidget extends StatefulWidget {
  @override
  _MyWidgetState createState() => _MyWidgetState();
}

class _MyWidgetState extends State<MyWidget> {
  bool isPasswordVisible = true;
  @override
  Widget build(BuildContext context) {
    return Center(
        child: Padding(
          padding: EdgeInsets.symmetric(horizontal: 50),
          child: TextField(
            obscureText:isPasswordVisible, 
              decoration: InputDecoration(
            labelText: 'Label Text',
            hintText: 'HintText',
                suffixIcon:IconButton(icon:Icon(isPasswordVisible? Icons. visibility_off:Icons.visibility), onPressed:() {
setState((){
isPasswordVisible = !isPasswordVisible ;
});
                } ) , 
                icon: Icon(Icons.people),
            border: OutlineInputBorder(),
          ) //decoration
              ), //textField
        ),
      ), //center
    );
  }
}




