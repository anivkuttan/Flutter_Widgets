import 'package:flutter/material.dart';

void main() => runApp(MyApp());

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      debugShowCheckedModeBanner: false,
      home: Scaffold(
          appBar: AppBar(
            title: const Text('Transision'),
            centerTitle: true,
          ), //appbar
          body: PageView(children: [
            MyWidget(),
            FirstPage(),
          ]) //pageview
          ),
    );
  }
}

class MyWidget extends StatefulWidget {
  @override
  _MyWidgetState createState() => _MyWidgetState();
}

class _MyWidgetState extends State<MyWidget> with TickerProviderStateMixin {
 late AnimationController scaleController;
 late AnimationController sizeController;
 late  Animation<double> sizeAnimation;
  late Animation<double> scaleAnimation;
  late AnimationController sliderController;
  late Animation<Offset> sliderAnimation;

  @override
  void initState() {
    super.initState();
    //-------------Scale Trainsition--------------//
    scaleController = AnimationController(
        vsync: this,
        duration: const Duration(seconds: 4),
        lowerBound: 0.2,
        upperBound: 1)
      ..repeat();
    // lowerBound is lower value
    // upperBound is higher value
    // if you using Tween then no need of this
    // controller.repeat();
    // this line useed like =>  ..repeat();
    scaleAnimation =
        CurvedAnimation(parent: scaleController, curve: Curves.bounceInOut);
    //Tween<double>(begin: 0.0, end: 1).animate(controller);
    //--------------Size Transition------------//
    sizeController =
        AnimationController(vsync: this, duration: const Duration(seconds: 2))
          ..repeat();
    sizeAnimation =
        CurvedAnimation(parent: sizeController, curve: Curves.linear);

//----------slider Transition--------------//
    sliderController =
        AnimationController(vsync: this, duration:const Duration(seconds: 2))
          ..repeat(reverse: true);
    //  ..repeat(reverse: true);
    sliderAnimation = Tween<Offset>(
      //begin child position
      //end  child moveing positions
      begin:const Offset(0, 0),
      end:const Offset(2, 0),
    ).animate(
        CurvedAnimation(parent: sliderController, curve: Curves.elasticIn));
  }

  @override
  void dispose() {
    scaleController.dispose();
    sliderController.dispose();
    sizeController.dispose();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return Center(
      child: SingleChildScrollView(
        child: Column(
          children: [
            const Text('Slide Transition' ), 
            SlideTransition(
                position: sliderAnimation, child: const FlutterLogo(size: 200)),
         const   SizedBox(height: 200),
            const Text('Scale Transition'), 
            ScaleTransition(
              alignment :const Alignment(0.1,0.5),
              scale: scaleAnimation,
              child: Container(
                height: 200,
                width: 200,
                alignment: Alignment.center,
                child: const Text('Anikuttan',
                    style: TextStyle(
                        fontSize: 30,
                        color: Colors.yellow,
                        fontWeight: FontWeight.bold,
                        fontStyle: FontStyle.italic)),
                decoration:const BoxDecoration(
                  color: Colors.red,
                  borderRadius: BorderRadius.all(
                    Radius.circular(20),
                  ), //radius
                ), //decoration
              ), //child container
            ), //transition
     const       SizedBox(height: 200),
            const Text ('Size Transition'), 
            SizeTransition(
              sizeFactor: sizeAnimation,
             axis: Axis.horizontal,
              //axis:Axis. vertical, 
              axisAlignment: -1,
              child: const FlutterLogo(
                size: 200,
                textColor: Colors.red,
              ), //flutter logo
            ), //sizeTransition
          ],
        ), //column
      ), //single child scroll view
    ); //center
  }
}

class FirstPage extends StatefulWidget {
  @override
  _FirstPageState createState() => _FirstPageState();
}

class _FirstPageState extends State<FirstPage> with TickerProviderStateMixin {
 late AnimationController rotationController;
 late Animation<double> rotationAnimation;
 late AnimationController fadeController;
 late Animation<double> fadeAnimation;
  @override
  void initState() {
    super.initState();
    //-----------Rotation-------------------//
    rotationController = AnimationController(
      vsync: this,
      duration: const Duration(seconds: 2),
      //lowerBound :0,
      // upperBound :0.8,
      //value:1,
    )..forward();
    rotationAnimation =
        CurvedAnimation(parent: rotationController, curve: Curves.linear);
    rotationAnimation.addStatusListener((status) {
      if (status == AnimationStatus.completed) {
        rotationController.reverse();
      } else if (status == AnimationStatus.dismissed) {
        rotationController.forward();
      }
    });

//----------------Fade Animation---------------//
    fadeController = AnimationController(
        vsync: this,
        duration:const Duration(seconds: 4),
        value: 0,
        lowerBound: 0.2,
        upperBound: 1)
      ..repeat();
    fadeAnimation =
        CurvedAnimation(parent: fadeController, curve: Curves.fastOutSlowIn);
  }

  @override
  void dispose() {
    rotationController.dispose();
    fadeController.dispose();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return Center(
      child: SingleChildScrollView(
        child: Column(
          children: [
const Text ('Fade Trainsition' ), 
            FadeTransition(
              opacity: fadeAnimation,
              child:const Text(
                'Anikuttan',
                style: TextStyle(fontSize: 70, fontWeight: FontWeight.bold),
              ), //text
            ), //fadd
           const SizedBox(height: 200),
const Text ('Rotate Trainsition' ), 
            RotationTransition(
              turns: rotationAnimation,
              alignment:const Alignment(0, 0),
              child: Container(
                height: 200,
                width: 200,
                color: Colors.deepOrange,
                alignment: Alignment.center,
                child: const Text(
                  'Anikuttan',
                  style: TextStyle(
                      fontSize: 30,
                      color: Colors.yellow,
                      fontWeight: FontWeight.bold,
                      fontStyle: FontStyle.italic), //textStyle
                ), //text
              ), //container
            ), //rotation
          ],
        ), //colmn
      ), //column
    ); //center
  }
}
