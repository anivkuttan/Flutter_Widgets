import 'package:flutter/material.dart';

void main() => runApp(MyApp());

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      home: PageView(children: [
        //  MyWidget(),
        FirstPage1(),
      ]),
    );
  }
}

class MyWidget extends StatefulWidget {
  @override
  _MyWidgetState createState() => _MyWidgetState();
}

class _MyWidgetState extends State<MyWidget> {
  final GlobalKey<AnimatedListState> key = GlobalKey();
  List<String> list = [
    "Ani kuttan 1",
    "Ani kuttan 2",
    "Ani kuttan 3",
    "hsjsj 4",
    "Ani kuttan 5",
    "Ani kuttan 6",
    "Ani kuttan 7",
    "Ani kuttan 8",
    "Ani kuttan 9",
    "Ani kuttan 10",
    "Ani kuttan 11",
    "Ani kuttan 12",
    "Ani kuttan 13",
    "Ani kuttan 14",
    "anikuttan 15",
    '16',
    '17',
    '18',
    '19',
    '20'
  ];
  @override
  Widget build(BuildContext context) {
    return Scaffold(
        appBar: AppBar(
          title: Text("AppBar"),
          leading: IconButton(
            icon: Icon(Icons.add),
            onPressed: () {
              addItem();
            },
          ), //button
        ), //appbar
        body: Center(
          child: AnimatedList(
            key: key,
            initialItemCount: list.length,
            itemBuilder: (context, index, animation) {
              return animatedList(context, index, animation);
            },
          ), //list
        ) //center
        ); //scaffold
  }

  addItem() {
    //format
    // inset to normal list
    // key.currentState.insertItem(index,duration);
    final int i = list.length; //create a variable
    list.add("Ani kuttan${list.length + 1}");
    key.currentState.insertItem(
      i,
      duration: Duration(seconds: 1),
    );
  }

  removeItem(int i) {
    final AnimatedListRemovedItemBuilder builder = (context, animation) {
      return animatedList(context, i, animation);
    };
    key.currentState.removeItem(i, builder, duration: Duration(seconds: 1));
    list.removeAt(i);
  }

  Widget animatedList(
      BuildContext context, int index, Animation<double> animation) {
    return SlideTransition(
      position: Tween<Offset>(begin: Offset(-1, 0), end: Offset.zero)
          .animate(animation),
      child: Card(
        elevation: 3,
        child: ListTile(
          title: Text(list[index]),
          leading: CircleAvatar(backgroundColor: Colors.orange), //avatar
          trailing: IconButton(
            icon: Icon(Icons.close, color: Colors.red),
            onPressed: () {
              removeItem(index);
            },
          ), //button
        ), //tile
      ), //c@rd
    ); //transition
  }
}

class FirstPage extends StatefulWidget {
  @override
  _FirstPageState createState() => _FirstPageState();
}

class _FirstPageState extends State<FirstPage> {
  GlobalKey<AnimatedListState> key = GlobalKey();
  List<String> list = [
    "1",
    "2",
    /* "Ani kuttan 3",
    "Ani kuttan 4",
    "Ani kuttan 5",
    "Ani kuttan 6",
    "Ani kuttan 7",
    "Ani kuttan 8",
    "Ani kuttan 9",
    "Ani kuttan 10",
    "Ani kuttan 11",
    "Ani kuttan 12",
    "Ani kuttan 13",*/
  ];
  MyWidget book = MyWidget();

  @override
  void initState() {
    super.initState();
  }

  Widget animationList(
      BuildContext context, int index, Animation<double> animation) {
    return SlideTransition(
      position: Tween<Offset>(begin: Offset(0.5, 0), end: Offset(0, 0))
          .animate(CurvedAnimation(parent: animation, curve: Curves.elasticIn)),
      child: Card(
        color: Colors.primaries[index],
        elevation: 3,
        child: ListTile(
          title: Text(list[index],
              style: TextStyle(fontSize: 20, color: Colors.white)),
        ),
      ),
    );
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('hw'),
        leading: IconButton(
            icon: Icon(Icons.cached),
            onPressed: () {
              final int i = list.length;
              list.add("${i + 1}");
              key.currentState.insertItem(i, duration: Duration(seconds: 1));
            }),
      ), //appbar
      body: AnimatedList(
        key: key,
        initialItemCount: list.length,
        // reverse: true,
        itemBuilder: (context, index, animation) =>
            animationList(context, index, animation),
      ), //list
    );
  }
}

class FirstPage1 extends StatefulWidget {
  @override
  _FirstPage1State createState() => _FirstPage1State();
}

class _FirstPage1State extends State<FirstPage1> {
  GlobalKey <AnimatedListState> key = GlobalKey() ;
  List<int> list = [1,2,];

  Widget itembuilder(
      BuildContext context, int index, Animation<double> animation) {
    return FadeTransition(
        opacity: Tween<double>(begin: 0, end: 1).animate(animation),
        child:
            Container(height: 100, color:Colors.primaries[index], width:500, alignment:Alignment.center,  child :Text('${list[index]}' , style:TextStyle (color:Colors. white, fontSize:28) ) ));
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        leading:IconButton(icon:Icon(Icons.add), onPressed:() {
          final int i = list. length;
list. add(i+1) ;
          key.currentState.insertItem(i, duration:Duration (seconds:2) ) ;
        }  ) , 
        title: Text('gsj'),
      ), // appba
      body: AnimatedList(
        key:key, 
        initialItemCount: list.length,
        itemBuilder: (context, index, animation) {
          return itembuilder(context, index, animation);
        },
      ), //animatedList
    );
  }
}
