import 'package:flutter/material.dart';

void main() => runApp(MyApp());

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      home: PageView(children: [
        MyWidget(),
        FirstPage(),
      ]),
    );
  }
}

class MyWidget extends StatefulWidget {
  @override
  _MyWidgetState createState() => _MyWidgetState();
}

class _MyWidgetState extends State<MyWidget> {
  final GlobalKey<AnimatedListState> key = GlobalKey();
  List<String> list = ["Ani kuttan 1", "Ani kuttan 2", "Ani kuttan 3"];
  @override
  Widget build(BuildContext context) {
    return Scaffold(
        appBar: AppBar(
          title: Text("AppBar"),
          leading: IconButton(
            icon: Icon(Icons.add),
            onPressed: () {
              addItem();
            },
          ), //button
        ), //appbar
        body: Center(
          child: AnimatedList(
            key: key,
            initialItemCount: list.length,
            itemBuilder: (context, index, animation) {
              return animatedList(context, index, animation);
            },
          ), //list
        ) //center
        ); //scaffold
  }

  addItem() {
    //format
    // inset to normal list
    // key.currentState.insertItem(index,duration);
    final int i = list.length; //create a variable
    list.insert(i, "Ani kuttan${list.length + 1}");
    key.currentState.insertItem(
      i,
      duration: Duration(seconds: 1),
    );
  }

  removeItem(int i) {
    final AnimatedListRemovedItemBuilder builder = (context, animation) {
      return animatedList(context, i, animation);
    };
    key.currentState.removeItem(i, builder, duration: Duration(seconds: 1));
    list.removeAt(i);
  }

  Widget animatedList(
      BuildContext context, int index, Animation<double> animation) {
    return SlideTransition(
      position: Tween<Offset>(begin: Offset(-1, 0), end: Offset.zero)
          .animate(animation),
      child: Card(
        elevation: 3,
        child: ListTile(
          title: Text(list[index]),
          leading: CircleAvatar(backgroundColor: Colors.orange), //avatar
          trailing: IconButton(
            icon: Icon(Icons.close, color: Colors.red),
            onPressed: () {
              removeItem(index);
            },
          ), //button
        ), //tile
      ), //c@rd
    ); //transition
  }
}

class FirstPage extends StatefulWidget {
  @override
  _FirstPageState createState() => _FirstPageState();
}

class _FirstPageState extends State<FirstPage> {
  GlobalKey<AnimatedListState> key = GlobalKey();
  List<String> list = ["name", 'age', 'sureName'];
  @override
  void initState() {
    super.initState();
  }

  Widget animationList(BuildContext context, int index, Animation animation) {
    return ScaleTransition(
      scale: Tween(begin: 0.4, end: 1.0).animate(animation),
      child: Card(
        elevation: 3,
        child: ListTile(
          title: Text(list[index]),
        ),
      ),
    );
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('tv'),
        leading: IconButton(icon: Icon(Icons.cached), onPressed: () {}),
      ), //appbar
      body: AnimatedList(
        key:key,
        initialItemCount: list.length,
        itemBuilder: (context, index, animation) =>
            animationList(context, index, animation),
      ), //list
    );
  }
}

