import 'package:flutter/material.dart';

void main() => runApp(MyApp());

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      home: MyWidget(),
    );
  }
}

class MyWidget extends StatefulWidget {
  @override
  _MyWidgetState createState() => _MyWidgetState();
}

class _MyWidgetState extends State<MyWidget> {
  final GlobalKey<AnimatedListState> key = GlobalKey();
  List<String> list = ["Ani kuttan 1", "Ani kuttan 2", "Ani kuttan 3"];
  @override
  Widget build(BuildContext context) {
    return Scaffold(
        appBar: AppBar(
          title: Text("AppBar"),
          leading: IconButton(
              icon: Icon(Icons.add),
              onPressed: () {
                addItem();
              }), //button
        ), //appbar
        body: Center(
          child: AnimatedList(
              key: key,
              initialItemCount: list.length,
              itemBuilder: (context, index, animation) {
                return animatedList(context, index, animation);
              }), //list
        ) //center
        ); //scaffold
  }

  addItem() {
    //format
    // inset to normal list
    // key.currentState.insertItem(index,duration);
    final int i = list.length; //create a variable
    list.insert(i, "Ani kuttan${list.length + 1}");
    key.currentState.insertItem(i, duration: Duration(seconds: 1));
  }

  removeItem(int i) {
    list.removeAt(i);
    final AnimatedListRemovedItemBuilder builder = (context, animation) {
     
      return animatedList(context, i, animation);
    };
    key. currentState.removeItem(i,builder, duration:Duration(seconds:1) );
  }

  Widget animatedList(
      BuildContext context, int index, Animation<double> animation) {
    return SlideTransition(
      position: Tween<Offset>(begin: Offset(-1, 0), end: Offset.zero)
          .animate(animation),
      child: ListTile(
        title: Text(list[index]),
        leading: CircleAvatar(backgroundColor: Colors.orange), //avatar
        trailing: IconButton(
            icon: Icon(Icons.close, color: Colors.red),
            onPressed: () {
              removeItem(index);
            }), //button
      ), //tile
    ); //transition
  }
}
